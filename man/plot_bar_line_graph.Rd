% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_bar_line_graph}
\alias{plot_bar_line_graph}
\title{Plot variable summary using plotly}
\usage{
plot_bar_line_graph(df, col, observed = NULL, predictions1 = NULL,
  predictions2 = NULL, weights, rounding_digits = 5)
}
\arguments{
\item{df}{\code{data.frame} containing summarised points to plot. Typcially
output from the \code{summarise_column} function.}

\item{col}{\code{character} name of the summarising column in df, this will
be plotted along the x axis.}

\item{observed}{\code{character} name of observed summary column  in df, this
will be plotted on the left y axis in pink.}

\item{predictions1}{\code{character} name of predictions summary column in df
, this will be plotted on the left y axis in dark green.}

\item{predictions2}{\code{character} name of 2nd predictions column summary
in df, this will be plotted on the left y axis in dark green.}

\item{weights}{\code{character} name of weights summary column in df, this
will be plotted on the right y axis with bars.}

\item{rounding_digits}{\code{numeic} number of digits to round mouse over
text values to. Default = \code{5}.}
}
\value{
\code{plotly}, \code{htmlwidget} for the produced graph.
}
\description{
Plot variable summary; bars of sum of weights (right y axis), lines show
average observed (pink), predictions1 (dark green) and predictions2 (light
green) and are plotted on the left y axis. Plot is generated using plotly so
there are various interactive elements to the graph.
}
\examples{
library(plotly)
library(dplyr)
library(rlang)
library(helpers)

set.seed(1)
data <- data.frame(a = c(runif(1000), rep(NA, 10)),
                   b = rnorm(1010),
                   c = rpois(1010, 3),
                   d = rnorm(1010),
                   e = runif(1010),
                   f = factor(sample(1010)),
                   g = as.character(sample(5, size = 1010, replace = T)))

summary <- summarise_column(df = data,
                            col = "a",
                           observed = "b",
                            predictions = c("e","d"),
                            weights = "c")

plot_bar_line_graph(df = summary,
                    col = "a",
                    observed = "b",
                    predictions1 = "e",
                    predictions2 = "d",
                    weights = "c")

}
